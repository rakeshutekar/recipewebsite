@page
@model CreateModel

@{
    ViewData["Title"] = "Create Recipe";
}

<style>
    body {
        font-family: 'Nunito', sans-serif;
    }

    h1, h2 {
        font-family: "Nunito", serif;
    }
</style>

<h1>@ViewData["Title"]</h1>


<!-- Recipe creation form group -->
<form action="" method="post" id="create-form">
    <div class="form-group">
        <label asp-for="@Model.Recipe.Title" class="control-label">Recipe Title</label>
        <input asp-for="@Model.Recipe.Title" class="form-control" type="text" required placeholder="Title" id="Title">
        <span asp-validation-for="@Model.Recipe.Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="@Model.Recipe.Description" class="control-label">Description</label>
        <textarea asp-for="@Model.Recipe.Description" class="form-control" type="text" required placeholder="Description" id="Description"></textarea>
        <span asp-validation-for="@Model.Recipe.Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="@Model.Recipe.Image" class="control-label">Image URL</label>
        <input asp-for="@Model.Recipe.Image" class="form-control" type="text" required placeholder="Image URL">
        <span asp-validation-for="@Model.Recipe.Image" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="@Model.Recipe.Tags" class="control-label">Tags</label>
        <div id="wrapperTags">
            <div class="input-group inputGrpTags">
                <input id="tag0" asp-for="@Model.Recipe.Tags[0]" class="form-control" required placeholder="Tag #1">
            </div>
            <span asp-validation-for="@Model.Recipe.Tags[0]" class="text-danger"></span>
        </div>
        <div id="btnTagsContainer" class="container-fluid">
            <div class="row justify-content-left">
                <input id="addBtnTags" class="btn btn-sm btn-outline-success my-1" type="button" value="+ Add Tag">
            </div>
        </div>
    </div>
    <div class="form-group">
    <label asp-for="@Model.Recipe.Ingredients" class="control-label">Ingredients</label>
        <div id="wrapperIngr">
            <div class="input-group inputGrpIngr">
                <input id="ingr0" asp-for="@Model.Recipe.Ingredients[0]" class="form-control" required placeholder="Ingredient #1">
            </div>
            <span asp-validation-for="@Model.Recipe.Ingredients[0]" class="text-danger"></span>
        </div>
        <div id="btnIngrContainer" class="container-fluid">
            <div class="row justify-content-left">
                <input id="addBtnIngr" class="btn btn-sm btn-outline-success my-1" type="button" value="+ Add Ingredient">
            </div>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="@Model.Recipe.Instructions" class="control-label">Instructions</label>
        <div id="wrapperInstr">
            <div class="input-group inputGrpInstr">
                <input id="instr0" asp-for="@Model.Recipe.Instructions[0]" class="form-control" required placeholder="Step #1">
            </div>
            <span asp-validation-for="@Model.Recipe.Instructions[0]" class="text-danger"></span>
        </div>
        <div id="btnInstrContainer" class="container-fluid">
            <div class="row justify-content-left">
                <input id="addBtnInstr" class="btn btn-sm btn-outline-success my-1" type="button" value="+ Add Instruction">
            </div>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>


@section Scripts {
    <script src="/wwwroot/js/site.js"></script>

    <script>
        // Get the parent form element
        const description = document.getElementById('Description');
        const title = document.getElementById('Title')

        description.addEventListener('input', validateInput);
        title.addEventListener('input', validateInput);

        // Respond to input and text area events to validate user input
        // client side and notify user of invalid input
        function validateInput(event) {
            const input = event.target;
            const span = input.nextElementSibling;

            if (input.checkValidity()) {
                span.textContent = '';
                span.className = 'text-danger';
            } else {
                span.textContent = input.validationMessage;
                span.className = 'text-danger visible';
            }
        }
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
